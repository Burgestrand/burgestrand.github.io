require 'bundler'
Bundler.require

# General config
src_dir  = './'
base_dir = '../'

# Compass config
sass_dir = File.join(src_dir, 'css')
css_dir = File.join(base_dir, 'css', 'compiled')
output_style = :compressed

# Haml config
haml_config = {
  :attr_wrapper => '"',
  :format => :html5,
}

# Tasks
namespace :compile do
  desc "Compiles all SASS stylesheets to CSS using Compass."
  task :css do
    system 'bundle exec compass compile -c Rakefile'
  end
  
  desc "Compiles all HAML to HTML into main dir."
  task :haml do
    # Find HAMLs and their respective HTMLs
    hamls = Dir[File.join(src_dir, '**', '*.haml')]
    htmls = hamls.map { |input| input.gsub(src_dir, base_dir).gsub(/haml\z/, 'html') }
    files = hamls.zip(htmls)
        
    # Recompile HTMLs that are old!
    count = files.size.to_s
    files.each_with_index do |(input, output), i|
      tag = "[#{i+1}/#{count}]"
      
      if FileUtils.uptodate?(output, [input])
        puts "#{tag} skipping #{input}".white
        next
      end
      
      puts "#{tag} #{input} => #{output}".green
      engine = Haml::Engine.new IO.read(input), haml_config.merge(:filename => input)
      File.open(output, 'w') { |f| f.write(engine.render) }
    end
  end
end

# Library
class String
  def green
    colorize("\e[1m\e[32m")
  end
  
  def white
    colorize("\e[37m")
  end
  
  def colorize(color_code)
    "#{color_code}#{self}\e[0m"
  end
end